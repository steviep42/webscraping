[["APIs.html", "Chapter 4 APIs 4.1 OMDB 4.2 The omdbapi package 4.3 RSelenium 4.4 EasyPubMed", " Chapter 4 APIs 4.1 OMDB Let’s look at the IMDB page which catalogues lots of information about movies. Just got to the web site and search although here is an example link. https://www.imdb.com/title/tt0076786/?ref_=fn_al_tt_2 In this case we would like to get the summary information for the movie. So we would use Selector Gadget or some other method to find the XPATH or CSS associated with this element. This pretty easy and doesn’t present much of a problem although for large scale mining of movie data we would run into trouble because IMDB doesn’t really like you to scrape their pages. They have an API that they would like for you to use. url &lt;- &#39;https://www.imdb.com/title/tt0076786/?ref_=fn_al_tt_2&#39; summary &lt;- read_html(url) %&gt;% html_nodes(xpath=&quot;/html/body/div[2]/main/div/section[1]/section/div[3]/section/section/div[3]/div[2]/div[1]/div[1]/div[2]/span[3]&quot;) %&gt;% html_text() summary But here we go again. We have to parse the desired elements on this page and then what if we wanted to follow other links or set up a general function to search IMDB for other movies of various genres, titles, directors, etc. So as an example on how this works. Paste the URL into any web browser. You must supply your key for this to work. What you get back is a JSON formatted entry corresponding to ”The GodFather”movie. url &lt;- &quot;http://www.omdbapi.com/?apikey=f7c004c&amp;t=The+Godfather&quot; library(RJSONIO) url &lt;- &quot;http://www.omdbapi.com/?apikey=f7c004c&amp;t=The+Godfather&quot; # Fetch the URL via fromJSON movie &lt;- fromJSON(&quot;http://www.omdbapi.com/?apikey=f7c004c&amp;t=The+Godfather&quot;) # We get back a list which is much easier to process than raw JSON or XML str(movie) ## List of 25 ## $ Title : chr &quot;The Godfather&quot; ## $ Year : chr &quot;1972&quot; ## $ Rated : chr &quot;R&quot; ## $ Released : chr &quot;24 Mar 1972&quot; ## $ Runtime : chr &quot;175 min&quot; ## $ Genre : chr &quot;Crime, Drama&quot; ## $ Director : chr &quot;Francis Ford Coppola&quot; ## $ Writer : chr &quot;Mario Puzo, Francis Ford Coppola&quot; ## $ Actors : chr &quot;Marlon Brando, Al Pacino, James Caan&quot; ## $ Plot : chr &quot;The Godfather follows Vito Corleone, Don of the Corleone family, as he passes the mantle to his unwilling son, Michael.&quot; ## $ Language : chr &quot;English, Italian, Latin&quot; ## $ Country : chr &quot;United States&quot; ## $ Awards : chr &quot;Won 3 Oscars. 31 wins &amp; 30 nominations total&quot; ## $ Poster : chr &quot;https://m.media-amazon.com/images/M/MV5BM2MyNjYxNmUtYTAwNi00MTYxLWJmNWYtYzZlODY3ZTk3OTFlXkEyXkFqcGdeQXVyNzkwMjQ&quot;| __truncated__ ## $ Ratings :List of 3 ## ..$ : Named chr [1:2] &quot;Internet Movie Database&quot; &quot;9.2/10&quot; ## .. ..- attr(*, &quot;names&quot;)= chr [1:2] &quot;Source&quot; &quot;Value&quot; ## ..$ : Named chr [1:2] &quot;Rotten Tomatoes&quot; &quot;97%&quot; ## .. ..- attr(*, &quot;names&quot;)= chr [1:2] &quot;Source&quot; &quot;Value&quot; ## ..$ : Named chr [1:2] &quot;Metacritic&quot; &quot;100/100&quot; ## .. ..- attr(*, &quot;names&quot;)= chr [1:2] &quot;Source&quot; &quot;Value&quot; ## $ Metascore : chr &quot;100&quot; ## $ imdbRating: chr &quot;9.2&quot; ## $ imdbVotes : chr &quot;1,742,506&quot; ## $ imdbID : chr &quot;tt0068646&quot; ## $ Type : chr &quot;movie&quot; ## $ DVD : chr &quot;11 May 2004&quot; ## $ BoxOffice : chr &quot;$134,966,411&quot; ## $ Production: chr &quot;N/A&quot; ## $ Website : chr &quot;N/A&quot; ## $ Response : chr &quot;True&quot; movie$Plot ## [1] &quot;The Godfather follows Vito Corleone, Don of the Corleone family, as he passes the mantle to his unwilling son, Michael.&quot; sapply(movie$Ratings,unlist) ## [,1] [,2] [,3] ## Source &quot;Internet Movie Database&quot; &quot;Rotten Tomatoes&quot; &quot;Metacritic&quot; ## Value &quot;9.2/10&quot; &quot;97%&quot; &quot;100/100&quot; Let’s Get all the Episodes for Season 1 of Game of Thrones url &lt;- &quot;http://www.omdbapi.com/?apikey=f7c004c&amp;t=Game%20of%20Thrones&amp;Season=1&quot; movie &lt;- fromJSON(url) str(movie,1) ## List of 5 ## $ Title : chr &quot;Game of Thrones&quot; ## $ Season : chr &quot;1&quot; ## $ totalSeasons: chr &quot;8&quot; ## $ Episodes :List of 10 ## $ Response : chr &quot;True&quot; episodes &lt;- data.frame(do.call(rbind,movie$Episodes),stringsAsFactors = FALSE) episodes ## Title Released Episode imdbRating ## 1 Winter Is Coming 2011-04-17 1 9.1 ## 2 The Kingsroad 2011-04-24 2 8.8 ## 3 Lord Snow 2011-05-01 3 8.7 ## 4 Cripples, Bastards, and Broken Things 2011-05-08 4 8.8 ## 5 The Wolf and the Lion 2011-05-15 5 9.1 ## 6 A Golden Crown 2011-05-22 6 9.2 ## 7 You Win or You Die 2011-05-29 7 9.2 ## 8 The Pointy End 2011-06-05 8 9.0 ## 9 Baelor 2011-06-12 9 9.6 ## 10 Fire and Blood 2011-06-19 10 9.5 ## imdbID ## 1 tt1480055 ## 2 tt1668746 ## 3 tt1829962 ## 4 tt1829963 ## 5 tt1829964 ## 6 tt1837862 ## 7 tt1837863 ## 8 tt1837864 ## 9 tt1851398 ## 10 tt1851397 4.2 The omdbapi package Wait a minute. Looks like someone created an R package that wraps all this for us. It is called omdbapi # Use devtools to install devtools::install_github(&quot;hrbrmstr/omdbapi&quot;) library(omdbapi) # The first time you use this you will be prompted to enter your # API key movie_df &lt;- search_by_title(&quot;Star Wars&quot;, page = 2) (movie_df &lt;- movie_df[,-5]) ## Title Year imdbID Type ## 1 Solo: A Star Wars Story 2018 tt3778644 movie ## 2 Star Wars: The Clone Wars 2008–2020 tt0458290 series ## 3 Star Wars: The Clone Wars 2008 tt1185834 movie ## 4 Star Wars: Rebels 2014–2018 tt2930604 series ## 5 Star Wars: Clone Wars 2003–2005 tt0361243 series ## 6 Star Wars: The Bad Batch 2021– tt12708542 series ## 7 The Star Wars Holiday Special 1978 tt0193524 movie ## 8 Star Wars: Visions 2021– tt13622982 series ## 9 Robot Chicken: Star Wars 2007 tt1020990 movie ## 10 Star Wars: Knights of the Old Republic 2003 tt0356070 game # Get lots of info on The GodFather (gf &lt;- find_by_title(&quot;The GodFather&quot;)) ## Warning: `as_data_frame()` was deprecated in tibble 2.0.0. ## Please use `as_tibble()` instead. ## The signature and semantics have changed, see `?as_tibble`. ## # A tibble: 3 × 25 ## Title Year Rated Released Runtime Genre Director Writer Actors Plot ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;date&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 The G… 1972 R 1972-03-24 175 min Crime… Francis… Mario … Marlon… The God… ## 2 The G… 1972 R 1972-03-24 175 min Crime… Francis… Mario … Marlon… The God… ## 3 The G… 1972 R 1972-03-24 175 min Crime… Francis… Mario … Marlon… The God… ## # … with 15 more variables: Language &lt;chr&gt;, Country &lt;chr&gt;, Awards &lt;chr&gt;, ## # Poster &lt;chr&gt;, Ratings &lt;list&gt;, Metascore &lt;chr&gt;, imdbRating &lt;dbl&gt;, ## # imdbVotes &lt;dbl&gt;, imdbID &lt;chr&gt;, Type &lt;chr&gt;, DVD &lt;date&gt;, BoxOffice &lt;chr&gt;, ## # Production &lt;chr&gt;, Website &lt;chr&gt;, Response &lt;chr&gt; # Get the actors from the GodFather get_actors((gf)) ## [1] &quot;Marlon Brando&quot; &quot;Al Pacino&quot; &quot;James Caan&quot; 4.3 RSelenium Sometimes we interact with websites that use Javascript to load more text or comments in a user forum. Here is an example of that. Look at https://www.dailystrength.org/group/dialysis which is a website associated with people wanting to share information about dialysis. If you check the bottom of the pag you will see a button. # https://www.dailystrength.org/group/dialysis library(RSelenium) library(rvest) library(tm) library(SentimentAnalysis) library(wordcloud) url &lt;- &quot;https://www.dailystrength.org/group/dialysis&quot; # The website has a &quot;show more&quot; button that hides most of the patient posts # If we don&#39;t find a way to programmatically &quot;click&quot; this button then we can # only get a few of the posts and their responses. To do this we need to # use the RSelenium package which does a lot of behind the scenes work # See https://cran.r-project.org/web/packages/RSelenium/RSelenium.pdf # http://brazenly.blogspot.com/2016/05/r-advanced-web-scraping-dynamic.html # Open up a connection # rD &lt;- rsDriver() # So, you might have to specify the version of chrome you are using # For someone reason this seems now to be necessary (11/4/19) rD &lt;- rsDriver(browser=c(&quot;chrome&quot;),chromever=&quot;78.0.3904.70&quot;) remDr &lt;- rD[[&quot;client&quot;]] remDr$navigate(url) loadmorebutton &lt;- remDr$findElement(using = &#39;css selector&#39;, &quot;#load-more-discussions&quot;) # Do this a number of times to get more links loadmorebutton$clickElement() # Now get the page with more comments and questions page_source &lt;- remDr$getPageSource() # So let&#39;s parse the contents comments &lt;- read_html(page_source[[1]]) cumulative_comments &lt;- vector() links &lt;- comments %&gt;% html_nodes(css=&quot;.newsfeed__description&quot;) %&gt;% html_node(&quot;a&quot;) %&gt;% html_attr(&quot;href&quot;) full_links &lt;- paste0(&quot;https://www.dailystrength.org&quot;,links) if (length(grep(&quot;NA&quot;,full_links)) &gt; 0) { full_links &lt;- full_links[-grep(&quot;NA&quot;,full_links)] } ugly_xpath &lt;- &#39;//*[contains(concat( &quot; &quot;, @class, &quot; &quot; ), concat( &quot; &quot;, &quot;comments__comment-text&quot;, &quot; &quot; ))] | //p&#39; for (ii in 1:length(full_links)) { text &lt;- read_html(full_links[ii]) %&gt;% html_nodes(xpath=ugly_xpath) %&gt;% html_text() length(text) &lt;- length(text) - 1 text &lt;- text[-1] text cumulative_comments &lt;- c(cumulative_comments,text) } remDr$close() # stop the selenium server rD[[&quot;server&quot;]]$stop() 4.4 EasyPubMed So there is an R package called EasyPubMed that helps ease the access of data on the Internet. The idea behind this package is to be able to query NCBI Entrez and retrieve PubMed records in XML or TXT format. The PubMed records can be downloaded and saved as XML or text files if desired. According to the package authours, “Data integrity is enforced during data download, allowing to retrieve and save very large number of records effortlessly.” The bottom line is that you can do what you want after that. Let’s look at an example involving home hemodialysis library(easyPubMed) Let’s do some searching my_query &lt;- &#39;hemodialysis, home&quot; [MeSH Terms]&#39; my_entrez_id &lt;- get_pubmed_ids(my_query) my_abstracts &lt;- fetch_pubmed_data(my_entrez_id) my_abstracts &lt;- custom_grep(my_abstracts,&quot;AbstractText&quot;,&quot;char&quot;) my_abstracts[1:3] [1] &quot;Assisted PD (assPD) is an option of home dialysis treatment for dependent end-stage renal patients and worldwide applied in different countries since more than 40 years. China and Germany shares similar trends in demographic development with a growing proportion of elderly referred to dialysis treatment. So far number of patients treated by assPD is low in both countries. We analyze experiences in the implementation process, barriers, and benefits of ass PD in the aging population to provide a model for sustainable home dialysis treatment with PD in both countries. Differences and similarities of different factors (industrial, patient and facility based) which affect utilization of assPD are discussed. AssPD should be promoted in China and Germany to realize the benefits of home dialysis for the aging population by providing a structured model of implementation and quality assurance.&quot; [2] &quot;End-stage renal disease (ESRD) is the final stage of chronic kidney disease in which the kidney is not sufficient to meet the needs of daily life. It is necessary to understand the role of genes expression involved in ESRD patient responses to nocturnal hemodialysis (NHD) and to improve the immunity responsiveness. The aim of this study was to investigate novel immune-associated genes that may play important roles in patients with ESRD.The microarray expression profiles of peripheral blood in patients with ESRD before and after NHD were analyzed by network-based approaches, and then using Gene Ontology (GO) and Kyoto Encyclopedia of Genes and Genomes pathway analysis to explore the biological process and molecular functions of differentially expressed genes. Subsequently, a transcriptional regulatory network of the core genes and the connected transcriptional regulators was constructed. We found that NHD had a significant effect on neutrophil activation and immune response in patients with ESRD.In addition, Our findings suggest that MAPKAPK3, RHOA, ARRB2, FLOT1, MYH9, PRKCD, RHOG, PTPN6, MAPK3, CNPY3, PI3KCG, and PYGL genes maybe potential targets regulated by core transcriptional factors, including ARNT, C/EBPalpha, CEBPA, CREB1, PSG1, DAND5, SP1, GATA1, MYC, EGR2, and EGR3.&quot; [3] &quot;Only a minority of patients with chronic kidney disease treated by hemodialysis are currently treated at home. Until relatively recently, the only type of hemodialysis machine available for these patients was a slightly smaller version of the standard machines used for in-center dialysis treatments. Areas covered: There are now an alternative generation of dialysis machines specifically designed for home hemodialysis. The home dialysis patient wants a smaller machine, which is intuitive to use, easy to trouble shoot, robust and reliable, quick to setup and put away, requiring minimal waste disposal. The machines designed for home dialysis have some similarities in terms of touch-screen patient interfaces, and using pre-prepared cartridges to speed up setting up the machine. On the other hand, they differ in terms of whether they use slower or standard dialysate flows, prepare batches of dialysis fluid, require separate water purification equipment, or whether this is integrated, or use pre-prepared sterile bags of dialysis fluid. Expert commentary: Dialysis machine complexity is one of the hurdles reducing the number of patients opting for home hemodialysis and the introduction of the newer generation of dialysis machines designed for ease of use will hopefully increase the number of patients opting for home hemodialysis.&quot; "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
